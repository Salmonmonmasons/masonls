import PropTypes from 'prop-types';
import { TextFieldProps } from '@material-ui/core';
import { InputProps } from 'ra-core';
import { ClassesOverride } from '../types';
/**
 * An override of the default Material-UI TextField which is resettable
 */
declare function ResettableTextField(props: ResettableTextFieldProps): JSX.Element;
declare namespace ResettableTextField {
    var propTypes: {
        classes: PropTypes.Requireable<object>;
        clearAlwaysVisible: PropTypes.Requireable<boolean>;
        disabled: PropTypes.Requireable<boolean>;
        InputProps: PropTypes.Requireable<object>;
        onBlur: PropTypes.Requireable<(...args: any[]) => any>;
        onChange: PropTypes.Validator<(...args: any[]) => any>;
        onFocus: PropTypes.Requireable<(...args: any[]) => any>;
        resettable: PropTypes.Requireable<boolean>;
        value: PropTypes.Validator<any>;
    };
}
declare const useStyles: (props?: any) => Record<"inputAdornedEnd" | "clearIcon" | "visibleClearIcon" | "clearButton" | "selectAdornment", string>;
interface Props {
    classes?: ClassesOverride<typeof useStyles>;
    clearAlwaysVisible?: boolean;
    resettable?: boolean;
}
export declare type ResettableTextFieldProps = InputProps<Props & TextFieldProps>;
export default ResettableTextField;
//# sourceMappingURL=ResettableTextField.d.ts.map